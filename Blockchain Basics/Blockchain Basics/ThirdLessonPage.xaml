<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    x:Class="BlockchainBasics.ThirdLessonPage"
    Title="Хэширование">
    <ScrollView>
        <StackLayout Margin="10">
            <Frame Margin="5, 5, 5, 0" CornerRadius="20">
                <Label>
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="Хэш-функция " ForegroundColor="#2F9BDF" FontAttributes="Bold" />
                            <Span Text="создает уникальный цифровой отпечаток из исходной информации. Итоговое хэширования информация называется хэш суммой или просто хэшем. "  />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
            </Frame>
            <Grid Margin="5, 0, 5, 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="220" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Frame Grid.Column="0" CornerRadius="20">
                    <StackLayout>
                        <Label>
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="Как работает хэш-функция?" ForegroundColor="#2F9BDF" FontAttributes="Bold" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="Хэш функция берет определенную информацию, например кусок текста или пароль от вашего аккаунта это может быть даже отдельный файл, и преобразует эту информацию в строку определенной длины, и эта строка всегда будет иметь одинаковую длину вне зависимости от того какого размера была входная информация. " ></Label>
                        <Label Margin="0, -7, 0 ,0" Text="содержит некоторую" ></Label>
                        <Label Margin="0, -7, 0 ,0" Text="информацию, свой хэш" ></Label>
                        <Label Margin="0, -7, 0 ,0" Text="и хэш предыдущего блока." ></Label>
                        <Label Margin="0, -7, 0 ,0" Text="Информация, хранящаяся " ></Label>
                        <Label Margin="0, -7, 0 ,0" Text="в блоке, зависит от типа " ></Label>
                        <Label Margin="0, -7, 0 ,0" Text="blockchain." ></Label>
                    </StackLayout>
                </Frame>
                <Frame Grid.Column="1"  CornerRadius="20">
                    <StackLayout Margin="-6, 5, -6, 0">
                        <Label>
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="Алгоритмы" ForegroundColor="#2F9BDF" FontAttributes="Bold" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label Text="Существует достаточно много различных хэш алгоритмов. Хэш-функции очень сильно отличаются от обычного шифрования, зашифровав какую-либо информацию через алгоритм, вы в любое время сможете эту информацию расшифровать с помощью парольной фразы.">
                        </Label>
                    </StackLayout>
                </Frame>
            </Grid>
            <Frame Margin="5, 0, 5, 0" CornerRadius="20">
                <Image Source="lesson1_material1.png"></Image>
            </Frame>
            <Frame Grid.Column="1"  CornerRadius="20">
                <StackLayout Margin="-6, 5, -6, 0">
                    <Label Text="Давайте рассмотрим пример: у нас есть цепочка из трех блоков. Как вы видите, каждый блок имеет свой хэш и хэш предыдущего блока. Блок номер 3 указывает на блок номер 2 и блок номер 2 указывает на блок номер 1. Сейчас первый блок немного уникальный, он не может указать на предыдущий блок, потому что он самый первый. Этот блок называется Генезис Блок. Допустим вы подделываете второй блок, и это означает что хэш блока изменится. В последствии это сделает блок 3 и следующие блоки неверными, так как они больше не содержат правильный хэш предыдущего блока. Поэтому изменение одного блока делает все последующие неверными."></Label>
                </StackLayout>
            </Frame>
            <Button x:Name="quiz1" Text="Пройти квиз" Margin="10" TextColor="White" BackgroundColor="#2F9BDF" CornerRadius="20"></Button>
        </StackLayout>
    </ScrollView>
</ContentPage>

